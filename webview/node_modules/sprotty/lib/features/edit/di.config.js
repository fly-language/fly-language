"use strict";
/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var types_1 = require("../../base/types");
var command_registration_1 = require("../../base/commands/command-registration");
var action_handler_1 = require("../../base/actions/action-handler");
var view_1 = require("../../base/views/view");
var model_1 = require("../../features/routing/model");
var svg_views_1 = require("../../lib/svg-views");
var delete_1 = require("./delete");
var edit_label_1 = require("./edit-label");
var edit_label_ui_1 = require("./edit-label-ui");
var edit_routing_1 = require("./edit-routing");
var reconnect_1 = require("./reconnect");
exports.edgeEditModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    var context = { bind: bind, isBound: isBound };
    command_registration_1.configureCommand(context, edit_routing_1.SwitchEditModeCommand);
    command_registration_1.configureCommand(context, reconnect_1.ReconnectCommand);
    command_registration_1.configureCommand(context, delete_1.DeleteElementCommand);
    view_1.configureModelElement(context, 'dangling-anchor', model_1.SDanglingAnchor, svg_views_1.EmptyGroupView);
});
exports.labelEditModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.MouseListener).to(edit_label_1.EditLabelMouseListener);
    bind(types_1.TYPES.KeyListener).to(edit_label_1.EditLabelKeyListener);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, edit_label_1.ApplyLabelEditCommand);
});
exports.labelEditUiModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    var context = { bind: bind, isBound: isBound };
    action_handler_1.configureActionHandler(context, edit_label_1.EditLabelAction.KIND, edit_label_ui_1.EditLabelActionHandler);
    bind(edit_label_ui_1.EditLabelUI).toSelf().inSingletonScope();
    bind(types_1.TYPES.IUIExtension).toService(edit_label_ui_1.EditLabelUI);
});
//# sourceMappingURL=di.config.js.map