"use strict";
/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var inversify_1 = require("inversify");
var snabbdom_jsx_1 = require("snabbdom-jsx");
var strings_1 = require("snabbdom-virtualize/strings");
var vnode_utils_1 = require("../base/views/vnode-utils");
var views_1 = require("../features/bounds/views");
var model_1 = require("./model");
var PreRenderedView = /** @class */ (function (_super) {
    __extends(PreRenderedView, _super);
    function PreRenderedView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PreRenderedView.prototype.render = function (model, context) {
        if (model instanceof model_1.ShapedPreRenderedElement && !this.isVisible(model, context)) {
            return undefined;
        }
        var node = strings_1.default(model.code);
        this.correctNamespace(node);
        return node;
    };
    PreRenderedView.prototype.correctNamespace = function (node) {
        if (node.sel === 'svg' || node.sel === 'g')
            vnode_utils_1.setNamespace(node, 'http://www.w3.org/2000/svg');
    };
    PreRenderedView = __decorate([
        inversify_1.injectable()
    ], PreRenderedView);
    return PreRenderedView;
}(views_1.ShapeView));
exports.PreRenderedView = PreRenderedView;
/**
 * An SVG `foreignObject` view with a namespace specified by the provided `ForeignObjectElement`.
 * Note that `foreignObject` may not be supported by all browsers or SVG viewers.
 */
var ForeignObjectView = /** @class */ (function () {
    function ForeignObjectView() {
    }
    ForeignObjectView.prototype.render = function (model, context) {
        var foreignObjectContents = strings_1.default(model.code);
        var node = snabbdom_jsx_1.svg("g", null,
            snabbdom_jsx_1.svg("foreignObject", { requiredFeatures: 'http://www.w3.org/TR/SVG11/feature#Extensibility', height: model.bounds.height, width: model.bounds.width, x: 0, y: 0 }, foreignObjectContents),
            context.renderChildren(model));
        vnode_utils_1.setAttr(node, 'class', model.type);
        vnode_utils_1.setNamespace(foreignObjectContents, model.namespace);
        return node;
    };
    ForeignObjectView = __decorate([
        inversify_1.injectable()
    ], ForeignObjectView);
    return ForeignObjectView;
}());
exports.ForeignObjectView = ForeignObjectView;
//# sourceMappingURL=generic-views.js.map