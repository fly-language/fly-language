/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { SModelFactory } from "../base/model/smodel-factory";
import { SChildElement, SModelElementSchema, SModelRoot, SModelRootSchema, SParentElement } from "../base/model/smodel";
import { SEdgeSchema, SGraphSchema, SLabelSchema, SNodeSchema, SPortSchema, SCompartmentSchema } from "./sgraph";
import { SButtonSchema } from '../features/button/model';
/**
 * @deprecated
 * Subclassing SModelFactory is discouraged. Use `registerModelElement`
 * or `configureModelElement` instead.
 */
export declare class SGraphFactory extends SModelFactory {
    protected readonly defaultGraphFeatures: import("../base/model/smodel").FeatureSet;
    protected readonly defaultNodeFeatures: import("../base/model/smodel").FeatureSet;
    protected readonly defaultPortFeatures: import("../base/model/smodel").FeatureSet;
    protected readonly defaultEdgeFeatures: import("../base/model/smodel").FeatureSet;
    protected readonly defaultLabelFeatures: import("../base/model/smodel").FeatureSet;
    protected readonly defaultCompartmentFeatures: import("../base/model/smodel").FeatureSet;
    protected readonly defaultButtonFeatures: import("../base/model/smodel").FeatureSet;
    createElement(schema: SModelElementSchema, parent?: SParentElement): SChildElement;
    createRoot(schema: SModelRootSchema): SModelRoot;
    isGraphSchema(schema: SModelElementSchema): schema is SGraphSchema;
    isNodeSchema(schema: SModelElementSchema): schema is SNodeSchema;
    isPortSchema(schema: SModelElementSchema): schema is SPortSchema;
    isEdgeSchema(schema: SModelElementSchema): schema is SEdgeSchema;
    isLabelSchema(schema: SModelElementSchema): schema is SLabelSchema;
    isCompartmentSchema(schema: SModelElementSchema): schema is SCompartmentSchema;
    isButtonSchema(schema: SModelElementSchema): schema is SButtonSchema;
}
//# sourceMappingURL=sgraph-factory.d.ts.map