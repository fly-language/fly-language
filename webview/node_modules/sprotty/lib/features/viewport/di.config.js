"use strict";
/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var types_1 = require("../../base/types");
var center_fit_1 = require("./center-fit");
var viewport_1 = require("./viewport");
var scroll_1 = require("./scroll");
var zoom_1 = require("./zoom");
var command_registration_1 = require("../../base/commands/command-registration");
var viewportModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, center_fit_1.CenterCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, center_fit_1.FitToScreenCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, viewport_1.SetViewportCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, viewport_1.GetViewportCommand);
    bind(types_1.TYPES.KeyListener).to(center_fit_1.CenterKeyboardListener);
    bind(types_1.TYPES.MouseListener).to(scroll_1.ScrollMouseListener);
    bind(types_1.TYPES.MouseListener).to(zoom_1.ZoomMouseListener);
});
exports.default = viewportModule;
//# sourceMappingURL=di.config.js.map