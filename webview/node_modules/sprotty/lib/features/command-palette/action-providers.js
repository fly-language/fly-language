"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = require("inversify");
var action_1 = require("../../base/actions/action");
var types_1 = require("../../base/types");
var iterable_1 = require("../../utils/iterable");
var model_1 = require("../nameable/model");
var select_1 = require("../select/select");
var center_fit_1 = require("../viewport/center-fit");
var CommandPaletteActionProviderRegistry = /** @class */ (function () {
    function CommandPaletteActionProviderRegistry(actionProviders) {
        if (actionProviders === void 0) { actionProviders = []; }
        this.actionProviders = actionProviders;
    }
    CommandPaletteActionProviderRegistry.prototype.getActions = function (root, text, lastMousePosition, index) {
        var actionLists = this.actionProviders.map(function (provider) { return provider.getActions(root, text, lastMousePosition, index); });
        return Promise.all(actionLists).then(function (p) { return p.reduce(function (acc, promise) { return promise !== undefined ? acc.concat(promise) : acc; }); });
    };
    CommandPaletteActionProviderRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.ICommandPaletteActionProvider)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], CommandPaletteActionProviderRegistry);
    return CommandPaletteActionProviderRegistry;
}());
exports.CommandPaletteActionProviderRegistry = CommandPaletteActionProviderRegistry;
var RevealNamedElementActionProvider = /** @class */ (function () {
    function RevealNamedElementActionProvider(logger) {
        this.logger = logger;
    }
    RevealNamedElementActionProvider.prototype.getActions = function (root, text, lastMousePosition, index) {
        if (index !== undefined && index % 2 === 0)
            return Promise.resolve(this.createSelectActions(root));
        else
            return Promise.resolve([new action_1.LabeledAction("Select all", [new select_1.SelectAllAction()])]);
    };
    RevealNamedElementActionProvider.prototype.createSelectActions = function (modelRoot) {
        var nameables = iterable_1.toArray(modelRoot.index.all().filter(function (element) { return model_1.isNameable(element); }));
        return nameables.map(function (nameable) { return new action_1.LabeledAction("Reveal " + model_1.name(nameable), [new select_1.SelectAction([nameable.id]), new center_fit_1.CenterAction([nameable.id])], 'fa-eye'); });
    };
    RevealNamedElementActionProvider = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.ILogger)),
        __metadata("design:paramtypes", [Object])
    ], RevealNamedElementActionProvider);
    return RevealNamedElementActionProvider;
}());
exports.RevealNamedElementActionProvider = RevealNamedElementActionProvider;
//# sourceMappingURL=action-providers.js.map