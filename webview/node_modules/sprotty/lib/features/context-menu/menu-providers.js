"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = require("inversify");
var types_1 = require("../../base/types");
var delete_1 = require("../edit/delete");
var model_1 = require("../select/model");
var ContextMenuProviderRegistry = /** @class */ (function () {
    function ContextMenuProviderRegistry(menuProviders) {
        if (menuProviders === void 0) { menuProviders = []; }
        this.menuProviders = menuProviders;
    }
    ContextMenuProviderRegistry.prototype.getItems = function (root, lastMousePosition) {
        var menues = this.menuProviders.map(function (provider) { return provider.getItems(root, lastMousePosition); });
        return Promise.all(menues).then(this.flattenAndRestructure);
    };
    ContextMenuProviderRegistry.prototype.flattenAndRestructure = function (p) {
        var menuItems = p.reduce(function (acc, promise) { return promise !== undefined ? acc.concat(promise) : acc; }, []);
        var menuItemsWithParentId = menuItems.filter(function (menuItem) { return menuItem.parentId; });
        var _loop_1 = function (menuItem) {
            if (menuItem.parentId) {
                var fragments = menuItem.parentId.split(".");
                var matchingParent = undefined;
                var nextParents = menuItems;
                var _loop_2 = function (fragment) {
                    matchingParent = nextParents.find(function (item) { return fragment === item.id; });
                    if (matchingParent && matchingParent.children)
                        nextParents = matchingParent.children;
                };
                for (var _i = 0, fragments_1 = fragments; _i < fragments_1.length; _i++) {
                    var fragment = fragments_1[_i];
                    _loop_2(fragment);
                }
                if (matchingParent) {
                    if (matchingParent.children) {
                        matchingParent.children.push(menuItem);
                    }
                    else {
                        matchingParent.children = [menuItem];
                    }
                    menuItems = menuItems.filter(function (item) { return item !== menuItem; });
                }
            }
        };
        for (var _i = 0, menuItemsWithParentId_1 = menuItemsWithParentId; _i < menuItemsWithParentId_1.length; _i++) {
            var menuItem = menuItemsWithParentId_1[_i];
            _loop_1(menuItem);
        }
        return menuItems;
    };
    ContextMenuProviderRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.IContextMenuItemProvider)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], ContextMenuProviderRegistry);
    return ContextMenuProviderRegistry;
}());
exports.ContextMenuProviderRegistry = ContextMenuProviderRegistry;
var DeleteContextMenuItemProvider = /** @class */ (function () {
    function DeleteContextMenuItemProvider() {
    }
    DeleteContextMenuItemProvider.prototype.getItems = function (root, lastMousePosition) {
        var selectedElements = Array.from(root.index.all().filter(model_1.isSelected).filter(delete_1.isDeletable));
        return Promise.resolve([
            {
                id: "delete",
                label: "Delete",
                sortString: "d",
                group: "edit",
                actions: [new delete_1.DeleteElementAction(selectedElements.map(function (e) { return e.id; }))],
                isEnabled: function () { return selectedElements.length > 0; }
            }
        ]);
    };
    DeleteContextMenuItemProvider = __decorate([
        inversify_1.injectable()
    ], DeleteContextMenuItemProvider);
    return DeleteContextMenuItemProvider;
}());
exports.DeleteContextMenuItemProvider = DeleteContextMenuItemProvider;
//# sourceMappingURL=menu-providers.js.map