/*
 * generated by Xtext 2.16.0
 */
package org.xtext.ui.contentassist

import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.Assignment
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor
import org.eclipse.xtext.RuleCall

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
class FLYProposalProvider extends AbstractFLYProposalProvider {
	
	
	override completeObjectLiteral_Value(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		//super.completeObjectLiteral_Value(model, assignment, context, acceptor)
		

		acceptor.accept(createCompletionProposal("alfredo", context))
	}
	
	override complete_VariableFunction(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_VariableFunction(model, ruleCall, context, acceptor)
	}
	
	
	override completeMathFunction_Feature(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.completeMathFunction_Feature(model, assignment, context, acceptor)
		
		for (var i = 0; i < Math.methods.length; i++) {
			acceptor.accept(createCompletionProposal(Math.methods.get(i).name + "()", context))
		}
	}
	
	override complete_MathFunction(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		for (var i = 0; i < Math.methods.length; i++) {
			acceptor.accept(createCompletionProposal(Math.methods.get(i).name + "()", context))
		}
	}
	
}
