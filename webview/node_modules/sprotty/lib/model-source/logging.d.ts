/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { ILogger, LogLevel } from "../utils/logging";
import { Action } from "../base/actions/action";
import { ModelSource } from "./model-source";
export declare class LoggingAction implements Action {
    readonly severity: string;
    readonly time: string;
    readonly caller: string;
    readonly message: string;
    readonly params: string[];
    static readonly KIND = "logging";
    readonly kind = "logging";
    constructor(severity: string, time: string, caller: string, message: string, params: string[]);
}
/**
 * A logger that forwards messages of type 'error', 'warn', and 'info' to the model source.
 */
export declare class ForwardingLogger implements ILogger {
    protected modelSourceProvider: () => Promise<ModelSource>;
    logLevel: LogLevel;
    error(thisArg: any, message: string, ...params: any[]): void;
    warn(thisArg: any, message: string, ...params: any[]): void;
    info(thisArg: any, message: string, ...params: any[]): void;
    log(thisArg: any, message: string, ...params: any[]): void;
    protected forward(thisArg: any, message: string, logLevel: LogLevel, params: any[]): void;
}
//# sourceMappingURL=logging.d.ts.map