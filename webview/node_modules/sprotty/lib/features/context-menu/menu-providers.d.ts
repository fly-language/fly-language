import { MenuItem } from "./context-menu-service";
import { SModelRoot } from "../../base/model/smodel";
import { Point } from "../../utils/geometry";
import { LabeledAction } from "../../base/actions/action";
export interface IContextMenuItemProvider {
    getItems(root: Readonly<SModelRoot>, lastMousePosition?: Point): Promise<LabeledAction[]>;
}
export declare class ContextMenuProviderRegistry implements IContextMenuItemProvider {
    protected menuProviders: IContextMenuItemProvider[];
    constructor(menuProviders?: IContextMenuItemProvider[]);
    getItems(root: Readonly<SModelRoot>, lastMousePosition?: Point): Promise<MenuItem[]>;
    private flattenAndRestructure;
}
export declare class DeleteContextMenuItemProvider implements IContextMenuItemProvider {
    getItems(root: Readonly<SModelRoot>, lastMousePosition?: Point): Promise<MenuItem[]>;
}
//# sourceMappingURL=menu-providers.d.ts.map